{"title":"react数组比较","slug":"array","date":"2018-06-25T06:35:45.000Z","updated":"2018-06-25T06:35:45.000Z","comments":true,"excerpt":"","content":"<h2 id=\"数组比较\"><a href=\"#数组比较\" class=\"headerlink\" title=\"数组比较\"></a>数组比较</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 重写现有方法时发出警告</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">Array</span>.prototype.equals)</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.warn(<span class=\"string\">\"重写现有array.prototype.equals。可能的原因：新的API定义了方法，框架冲突，或者代码中包含了该方法。\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 在数组的原型上加上相等的方法，在任何数组上调用它。</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span>.prototype.equals = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果要比较的数组是一个 空值 ，返回 false</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!array)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 比较长度-可以节省很多时间</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.length != array.length)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, l = <span class=\"keyword\">this</span>.length; i &lt; l; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 检查是否有嵌套数组</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>[i] <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span> &amp;&amp; array[i] <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 递归嵌套的数组</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>[i].equals(array[i]))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>[i] != array[i]) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 警告-两个不同的对象实例将永远不相等: &#123;x:20&#125; != &#123;x:20&#125;</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 在循环中隐藏方法</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(<span class=\"built_in\">Array</span>.prototype, <span class=\"string\">\"equals\"</span>, &#123;<span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>对象比较<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.equals = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">object2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 对于第一个循环，我们只检查类型。</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (propName <span class=\"keyword\">in</span> <span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 检查继承的方法和属性，比如 .equals itself</span></span><br><span class=\"line\">    <span class=\"comment\">//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty</span></span><br><span class=\"line\">    <span class=\"comment\">// 返回值不同时返回false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.hasOwnProperty(propName) != object2.hasOwnProperty(propName)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 检查实例类型</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>[propName] != <span class=\"keyword\">typeof</span> object2[propName]) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Different types =&gt; not equal 类型不同则不同</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//现在使用其他对象属性名称进行更深入的检查</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(propName <span class=\"keyword\">in</span> object2) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//我们必须检查的情况下，不管怎么说，有可能是一个属性，只存在于object2</span></span><br><span class=\"line\">      <span class=\"comment\">//我想知道，如果记住第一个循环中选中的值会不会更快。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.hasOwnProperty(propName) != object2.hasOwnProperty(propName)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>[propName] != <span class=\"keyword\">typeof</span> object2[propName]) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//如果属性是遗传的，不检查任何（必须是方程如果对象继承它）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">this</span>.hasOwnProperty(propName))</span><br><span class=\"line\">     <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 现在详细检查和递归</span></span><br><span class=\"line\">    <span class=\"comment\">// 将js脚本返回到数组比较。</span></span><br><span class=\"line\">    <span class=\"comment\">/**REQUIRES Array.equals**/</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>[propName] <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span> &amp;&amp; object2[propName] <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 递归嵌套的数组</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>[propName].equals(object2[propName]))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>[propName] <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span> &amp;&amp; object2[propName] <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 递归到另一个对象</span></span><br><span class=\"line\">          <span class=\"comment\">//console.log(\"检索比较 \", this[propName],\"和\",object2[propName], \" both named \\\"\"+propName+\"\\\"\");</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>[propName].equals(object2[propName]))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//Normal value comparison for strings and numbers</span></span><br><span class=\"line\">    <span class=\"comment\">// 对正常价值的比较和编号。</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>[propName] != object2[propName]) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 如果都 通过了就说明 对象是对的</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","thumbnail":"http://i2.bvimg.com/571684/c4cadfacbe34ff53.jpg","categories":[{"name":"js array","path":"api/categories/js array.json"}],"tags":[{"name":"js react array","path":"api/tags/js react array.json"}]}